#!/bin/bash
MIPS_CC='mips-linux-gnu-gcc'
MIPS_OBJCOPY='mips-linux-gnu-objcopy'
MIPS_OBJDUMP='mips-linux-gnu-objdump'
MIPS_CPPFLAGS='-W -Wall -O3 -fno-builtin -march=mips1 -mfp32'
MIPS_LDFLAGS='-nostdlib -Wl,-melf32btsmip -march=mips1 -nostartfiles -mno-check-zero-division -Wl,--gpsize=0 -static -Wl,-Bstatic -Wl,--build-id=none'

TESTS='test/bin/*.bin'
DATA='test/data.csv'
OUTPUT_FILE='test/results.csv'

rm $OUTPUT_FILE
echo ""TestId","Instruction","Status","Author","Message","ExpectedCode","ReturnCode"" >> $OUTPUT_FILE

COUNT=2

for i in $TESTS
do
  TEST_NAME=${i##*/}
  TEST_NAME=${TEST_NAME%*.mips.bin}
  INSTRUCTION=${TEST_NAME%?}

  ./bin/mips_simulator $i
  RETCODE=$?

  eval LINE=($(sed "${COUNT}q;d" $DATA))
  IFS=',' read -r -a ARRAY <<< "$LINE"
  COUNT=$((COUNT+1))

  EXPECTED="${ARRAY[2]}"
  AUTHOR="${ARRAY[3]}"
  MESSAGE="${ARRAY[4]}"

  if [[ "$RETCODE" = "$EXPECTED" ]]
  then
    echo "$TEST_NAME,$INSTRUCTION,"Pass",$AUTHOR,$MESSAGE,$EXPECTED,$RETCODE" >> $OUTPUT_FILE
  else
    echo "$TEST_NAME,$INSTRUCTION,"Fail",$AUTHOR,$MESSAGE,$EXPECTED,$RETCODE" >> $OUTPUT_FILE
  fi

done

#print CSV to STDOUT
